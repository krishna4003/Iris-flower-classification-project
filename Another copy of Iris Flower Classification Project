{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1mZxTfR0qqYUVybZFqviN15BmGltB07gT","timestamp":1705148924161},{"file_id":"15JdSVL97NQV6U_SOLKnsBu9RcmV8a7pO","timestamp":1705051867460},{"file_id":"1zKyUqpPFV6oitxhT7MzxxNtcSa6C8gqv","timestamp":1704629102734}],"authorship_tag":"ABX9TyM5Wp+v7CCbU3OoGh1uKgJd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# !!Iris Flower Classification Project"],"metadata":{"id":"e3mgwM5aAdMF"}},{"cell_type":"code","source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n"],"metadata":{"id":"xbw_i4owEMgR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"aUp2nl-DEM7O"}},{"cell_type":"code","source":["df=pd.read_csv('/content/Iris.csv')"],"metadata":{"id":"sLNykWzSD-Hd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bJpcQ5HkhLzF","executionInfo":{"status":"ok","timestamp":1705083964776,"user_tz":-330,"elapsed":9,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"3577101a-3c33-4cbb-d5a4-fd71890a557f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n","0      1            5.1           3.5            1.4           0.2   \n","1      2            4.9           3.0            1.4           0.2   \n","2      3            4.7           3.2            1.3           0.2   \n","3      4            4.6           3.1            1.5           0.2   \n","4      5            5.0           3.6            1.4           0.2   \n","..   ...            ...           ...            ...           ...   \n","145  146            6.7           3.0            5.2           2.3   \n","146  147            6.3           2.5            5.0           1.9   \n","147  148            6.5           3.0            5.2           2.0   \n","148  149            6.2           3.4            5.4           2.3   \n","149  150            5.9           3.0            5.1           1.8   \n","\n","            Species  \n","0       Iris-setosa  \n","1       Iris-setosa  \n","2       Iris-setosa  \n","3       Iris-setosa  \n","4       Iris-setosa  \n","..              ...  \n","145  Iris-virginica  \n","146  Iris-virginica  \n","147  Iris-virginica  \n","148  Iris-virginica  \n","149  Iris-virginica  \n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-adc40273-bcce-4ff0-9fb4-f062013f861a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>146</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>147</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>148</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>149</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>150</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adc40273-bcce-4ff0-9fb4-f062013f861a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-adc40273-bcce-4ff0-9fb4-f062013f861a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-adc40273-bcce-4ff0-9fb4-f062013f861a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f258ece8-77db-445f-98cc-eebf0f52166a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f258ece8-77db-445f-98cc-eebf0f52166a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f258ece8-77db-445f-98cc-eebf0f52166a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_06e35171-23cc-477d-adec-04919163fbd8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_06e35171-23cc-477d-adec-04919163fbd8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["x=df.iloc[:,1:5].values #separation of dependent variables\n"],"metadata":{"id":"V-kav-VsprTZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BdUz_M68hYuA","executionInfo":{"status":"ok","timestamp":1705083970371,"user_tz":-330,"elapsed":4,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"f1111209-e770-4bae-a133-2f9b19ebfdf6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5.1, 3.5, 1.4, 0.2],\n","       [4.9, 3. , 1.4, 0.2],\n","       [4.7, 3.2, 1.3, 0.2],\n","       [4.6, 3.1, 1.5, 0.2],\n","       [5. , 3.6, 1.4, 0.2],\n","       [5.4, 3.9, 1.7, 0.4],\n","       [4.6, 3.4, 1.4, 0.3],\n","       [5. , 3.4, 1.5, 0.2],\n","       [4.4, 2.9, 1.4, 0.2],\n","       [4.9, 3.1, 1.5, 0.1],\n","       [5.4, 3.7, 1.5, 0.2],\n","       [4.8, 3.4, 1.6, 0.2],\n","       [4.8, 3. , 1.4, 0.1],\n","       [4.3, 3. , 1.1, 0.1],\n","       [5.8, 4. , 1.2, 0.2],\n","       [5.7, 4.4, 1.5, 0.4],\n","       [5.4, 3.9, 1.3, 0.4],\n","       [5.1, 3.5, 1.4, 0.3],\n","       [5.7, 3.8, 1.7, 0.3],\n","       [5.1, 3.8, 1.5, 0.3],\n","       [5.4, 3.4, 1.7, 0.2],\n","       [5.1, 3.7, 1.5, 0.4],\n","       [4.6, 3.6, 1. , 0.2],\n","       [5.1, 3.3, 1.7, 0.5],\n","       [4.8, 3.4, 1.9, 0.2],\n","       [5. , 3. , 1.6, 0.2],\n","       [5. , 3.4, 1.6, 0.4],\n","       [5.2, 3.5, 1.5, 0.2],\n","       [5.2, 3.4, 1.4, 0.2],\n","       [4.7, 3.2, 1.6, 0.2],\n","       [4.8, 3.1, 1.6, 0.2],\n","       [5.4, 3.4, 1.5, 0.4],\n","       [5.2, 4.1, 1.5, 0.1],\n","       [5.5, 4.2, 1.4, 0.2],\n","       [4.9, 3.1, 1.5, 0.1],\n","       [5. , 3.2, 1.2, 0.2],\n","       [5.5, 3.5, 1.3, 0.2],\n","       [4.9, 3.1, 1.5, 0.1],\n","       [4.4, 3. , 1.3, 0.2],\n","       [5.1, 3.4, 1.5, 0.2],\n","       [5. , 3.5, 1.3, 0.3],\n","       [4.5, 2.3, 1.3, 0.3],\n","       [4.4, 3.2, 1.3, 0.2],\n","       [5. , 3.5, 1.6, 0.6],\n","       [5.1, 3.8, 1.9, 0.4],\n","       [4.8, 3. , 1.4, 0.3],\n","       [5.1, 3.8, 1.6, 0.2],\n","       [4.6, 3.2, 1.4, 0.2],\n","       [5.3, 3.7, 1.5, 0.2],\n","       [5. , 3.3, 1.4, 0.2],\n","       [7. , 3.2, 4.7, 1.4],\n","       [6.4, 3.2, 4.5, 1.5],\n","       [6.9, 3.1, 4.9, 1.5],\n","       [5.5, 2.3, 4. , 1.3],\n","       [6.5, 2.8, 4.6, 1.5],\n","       [5.7, 2.8, 4.5, 1.3],\n","       [6.3, 3.3, 4.7, 1.6],\n","       [4.9, 2.4, 3.3, 1. ],\n","       [6.6, 2.9, 4.6, 1.3],\n","       [5.2, 2.7, 3.9, 1.4],\n","       [5. , 2. , 3.5, 1. ],\n","       [5.9, 3. , 4.2, 1.5],\n","       [6. , 2.2, 4. , 1. ],\n","       [6.1, 2.9, 4.7, 1.4],\n","       [5.6, 2.9, 3.6, 1.3],\n","       [6.7, 3.1, 4.4, 1.4],\n","       [5.6, 3. , 4.5, 1.5],\n","       [5.8, 2.7, 4.1, 1. ],\n","       [6.2, 2.2, 4.5, 1.5],\n","       [5.6, 2.5, 3.9, 1.1],\n","       [5.9, 3.2, 4.8, 1.8],\n","       [6.1, 2.8, 4. , 1.3],\n","       [6.3, 2.5, 4.9, 1.5],\n","       [6.1, 2.8, 4.7, 1.2],\n","       [6.4, 2.9, 4.3, 1.3],\n","       [6.6, 3. , 4.4, 1.4],\n","       [6.8, 2.8, 4.8, 1.4],\n","       [6.7, 3. , 5. , 1.7],\n","       [6. , 2.9, 4.5, 1.5],\n","       [5.7, 2.6, 3.5, 1. ],\n","       [5.5, 2.4, 3.8, 1.1],\n","       [5.5, 2.4, 3.7, 1. ],\n","       [5.8, 2.7, 3.9, 1.2],\n","       [6. , 2.7, 5.1, 1.6],\n","       [5.4, 3. , 4.5, 1.5],\n","       [6. , 3.4, 4.5, 1.6],\n","       [6.7, 3.1, 4.7, 1.5],\n","       [6.3, 2.3, 4.4, 1.3],\n","       [5.6, 3. , 4.1, 1.3],\n","       [5.5, 2.5, 4. , 1.3],\n","       [5.5, 2.6, 4.4, 1.2],\n","       [6.1, 3. , 4.6, 1.4],\n","       [5.8, 2.6, 4. , 1.2],\n","       [5. , 2.3, 3.3, 1. ],\n","       [5.6, 2.7, 4.2, 1.3],\n","       [5.7, 3. , 4.2, 1.2],\n","       [5.7, 2.9, 4.2, 1.3],\n","       [6.2, 2.9, 4.3, 1.3],\n","       [5.1, 2.5, 3. , 1.1],\n","       [5.7, 2.8, 4.1, 1.3],\n","       [6.3, 3.3, 6. , 2.5],\n","       [5.8, 2.7, 5.1, 1.9],\n","       [7.1, 3. , 5.9, 2.1],\n","       [6.3, 2.9, 5.6, 1.8],\n","       [6.5, 3. , 5.8, 2.2],\n","       [7.6, 3. , 6.6, 2.1],\n","       [4.9, 2.5, 4.5, 1.7],\n","       [7.3, 2.9, 6.3, 1.8],\n","       [6.7, 2.5, 5.8, 1.8],\n","       [7.2, 3.6, 6.1, 2.5],\n","       [6.5, 3.2, 5.1, 2. ],\n","       [6.4, 2.7, 5.3, 1.9],\n","       [6.8, 3. , 5.5, 2.1],\n","       [5.7, 2.5, 5. , 2. ],\n","       [5.8, 2.8, 5.1, 2.4],\n","       [6.4, 3.2, 5.3, 2.3],\n","       [6.5, 3. , 5.5, 1.8],\n","       [7.7, 3.8, 6.7, 2.2],\n","       [7.7, 2.6, 6.9, 2.3],\n","       [6. , 2.2, 5. , 1.5],\n","       [6.9, 3.2, 5.7, 2.3],\n","       [5.6, 2.8, 4.9, 2. ],\n","       [7.7, 2.8, 6.7, 2. ],\n","       [6.3, 2.7, 4.9, 1.8],\n","       [6.7, 3.3, 5.7, 2.1],\n","       [7.2, 3.2, 6. , 1.8],\n","       [6.2, 2.8, 4.8, 1.8],\n","       [6.1, 3. , 4.9, 1.8],\n","       [6.4, 2.8, 5.6, 2.1],\n","       [7.2, 3. , 5.8, 1.6],\n","       [7.4, 2.8, 6.1, 1.9],\n","       [7.9, 3.8, 6.4, 2. ],\n","       [6.4, 2.8, 5.6, 2.2],\n","       [6.3, 2.8, 5.1, 1.5],\n","       [6.1, 2.6, 5.6, 1.4],\n","       [7.7, 3. , 6.1, 2.3],\n","       [6.3, 3.4, 5.6, 2.4],\n","       [6.4, 3.1, 5.5, 1.8],\n","       [6. , 3. , 4.8, 1.8],\n","       [6.9, 3.1, 5.4, 2.1],\n","       [6.7, 3.1, 5.6, 2.4],\n","       [6.9, 3.1, 5.1, 2.3],\n","       [5.8, 2.7, 5.1, 1.9],\n","       [6.8, 3.2, 5.9, 2.3],\n","       [6.7, 3.3, 5.7, 2.5],\n","       [6.7, 3. , 5.2, 2.3],\n","       [6.3, 2.5, 5. , 1.9],\n","       [6.5, 3. , 5.2, 2. ],\n","       [6.2, 3.4, 5.4, 2.3],\n","       [5.9, 3. , 5.1, 1.8]])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["y=df.iloc[:,5].values # separation of independent variable"],"metadata":{"id":"U1dtli-RhhrH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hpF8Jx51hnZI","executionInfo":{"status":"ok","timestamp":1705083974049,"user_tz":-330,"elapsed":3,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"71e7ca9b-671f-447c-8e24-39de48367b96"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n","       'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica', 'Iris-virginica',\n","       'Iris-virginica', 'Iris-virginica'], dtype=object)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.isnull().sum() # checking for null values"],"metadata":{"id":"PDZWU4U5iYiq","executionInfo":{"status":"ok","timestamp":1705083978445,"user_tz":-330,"elapsed":777,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6946883c-5ac1-4cba-a963-722f23aaba63"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Id               0\n","SepalLengthCm    0\n","SepalWidthCm     0\n","PetalLengthCm    0\n","PetalWidthCm     0\n","Species          0\n","dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder # label encoding"],"metadata":{"id":"jGQTk-HX2bpa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["label_encoder_x=LabelEncoder()"],"metadata":{"id":"ZYty-RS82l7m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" y=label_encoder_x.fit_transform(y)"],"metadata":{"id":"g4isCS5X2sPW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FOQaUUaq3cRJ","executionInfo":{"status":"ok","timestamp":1705083987913,"user_tz":-330,"elapsed":2,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"a473465d-d852-46d6-c2f7-053bb8f7d47c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":[" from sklearn.preprocessing import OneHotEncoder #one hot encoding"],"metadata":{"id":"-JwH6-AM3ic5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["one_hot_encoder=OneHotEncoder()"],"metadata":{"id":"CpkE_2Hr4mUg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x= one_hot_encoder.fit_transform(df.Species.values.reshape(-1,1)).toarray()"],"metadata":{"id":"SmGesVU39ALr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JPdSHpkW9e20","executionInfo":{"status":"ok","timestamp":1705047880026,"user_tz":-330,"elapsed":3,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"df314eaa-6ec6-40d2-8357-2a3b4b886389"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split #training and testing dataset into test and train set"],"metadata":{"id":"n5q05siXjTkG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.3, random_state=200)"],"metadata":{"id":"IFrHcNnFjffp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_test\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iYVHvIF3jsPH","executionInfo":{"status":"ok","timestamp":1705047884532,"user_tz":-330,"elapsed":2,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"3b402b81-0404-44ee-b7af-80c34dd08e98"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 1., 0.],\n","       [0., 0., 1.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 0., 1.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       [0., 1., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 0., 1.],\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E7s2zUsVkVE6","executionInfo":{"status":"ok","timestamp":1705047888198,"user_tz":-330,"elapsed":733,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"8e7356fe-a055-42ed-dc3a-c266123c08e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 2, 0, 0, 0, 2, 0, 1, 0, 1, 2, 0, 1,\n","       2, 0, 0, 0, 1, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1,\n","       2])"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["len(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qF1OsCWJ-JhR","executionInfo":{"status":"ok","timestamp":1705047888696,"user_tz":-330,"elapsed":1,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"3dc77ed2-767e-450c-d630-b8fad5c1b4a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["45"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["len(x_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i58KhnQP-LtG","executionInfo":{"status":"ok","timestamp":1705047890166,"user_tz":-330,"elapsed":1,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"0344c469-97df-430d-fd01-60052e869ee1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["105"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier # applying KNN algorithm"],"metadata":{"id":"3lxPbR32jvgA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf= KNeighborsClassifier(n_neighbors=10)"],"metadata":{"id":"6nL9FpWQj1ez"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"CMks63_Gj-2v","executionInfo":{"status":"ok","timestamp":1705048067023,"user_tz":-330,"elapsed":5,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"4597b8ad-e51c-4940-ab44-2e318520e931"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=10)"],"text/html":["<style>#sk-container-id-8 {color: black;background-color: white;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=10)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["clf.predict(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EeZIquGlkDCu","executionInfo":{"status":"ok","timestamp":1705048069141,"user_tz":-330,"elapsed":3,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"b10b451d-fb65-4eb6-f400-39a5d4f0f523"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 2, 0, 0, 0, 2, 0, 1, 0, 1, 2, 0, 1,\n","       2, 0, 0, 0, 1, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1,\n","       2])"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["clf.score(x_test,y_test) #accuracy is 100%"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_DV0w9GfkjkE","executionInfo":{"status":"ok","timestamp":1705048070828,"user_tz":-330,"elapsed":2,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"c2c00c48-be03-47c3-d62e-06c3bdb1ba6d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["#GridSearchCv\n","#importing  necessary libraries\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.neighbors import KNeighborsClassifier"],"metadata":{"id":"5bqjBuJltV5t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model=KNeighborsClassifier() #loading KNN model"],"metadata":{"id":"X9uhEAxGtV8v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["parameters={                             #hyperparameters\n","    'n_neighbors':[ 5,10,67,90],\n","    'p':[3,10,20]\n","}\n"],"metadata":{"id":"mv0JjbjruzN1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#grid search\n","classifier=GridSearchCV(model,parameters,cv=7)"],"metadata":{"id":"pFORXFNVvL4G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#fitting the data to our model\n","classifier.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":118},"id":"rduPX_AevT2b","executionInfo":{"status":"ok","timestamp":1705048290703,"user_tz":-330,"elapsed":717,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"099494d9-7039-41d0-dc06-fbf0b8a851de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=7, estimator=KNeighborsClassifier(),\n","             param_grid={'n_neighbors': [5, 10, 67, 90], 'p': [3, 10, 20]})"],"text/html":["<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=7, estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: [5, 10, 67, 90], &#x27;p&#x27;: [3, 10, 20]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=7, estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: [5, 10, 67, 90], &#x27;p&#x27;: [3, 10, 20]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["classifier.cv_results_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r_MqtXuVvbWH","executionInfo":{"status":"ok","timestamp":1705048295518,"user_tz":-330,"elapsed":882,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"8b6f872d-175e-4fcd-b59e-c03f063abbb7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'mean_fit_time': array([0.00101359, 0.00071355, 0.00073964, 0.00063852, 0.0006347 ,\n","        0.00069175, 0.00078733, 0.00060538, 0.0005751 , 0.00056219,\n","        0.00055776, 0.00056815]),\n"," 'std_fit_time': array([1.69006594e-04, 1.47837450e-04, 1.77345775e-04, 3.51278223e-05,\n","        1.60677792e-05, 5.46043029e-05, 3.80692493e-04, 3.92783155e-05,\n","        2.45990503e-05, 2.18529102e-05, 2.49078902e-05, 1.38294520e-05]),\n"," 'mean_score_time': array([0.00417348, 0.0031102 , 0.00332567, 0.00281797, 0.0029507 ,\n","        0.00297989, 0.00997206, 0.00398912, 0.00370836, 0.00375598,\n","        0.00368411, 0.00423179]),\n"," 'std_score_time': array([5.70584334e-04, 7.32257694e-04, 8.49248876e-04, 1.40649922e-04,\n","        2.84101850e-04, 1.96426479e-04, 1.38162953e-02, 1.61806155e-04,\n","        9.34431385e-05, 1.06267975e-04, 6.25970516e-05, 8.95635205e-04]),\n"," 'param_n_neighbors': masked_array(data=[5, 5, 5, 10, 10, 10, 67, 67, 67, 90, 90, 90],\n","              mask=[False, False, False, False, False, False, False, False,\n","                    False, False, False, False],\n","        fill_value='?',\n","             dtype=object),\n"," 'param_p': masked_array(data=[3, 10, 20, 3, 10, 20, 3, 10, 20, 3, 10, 20],\n","              mask=[False, False, False, False, False, False, False, False,\n","                    False, False, False, False],\n","        fill_value='?',\n","             dtype=object),\n"," 'params': [{'n_neighbors': 5, 'p': 3},\n","  {'n_neighbors': 5, 'p': 10},\n","  {'n_neighbors': 5, 'p': 20},\n","  {'n_neighbors': 10, 'p': 3},\n","  {'n_neighbors': 10, 'p': 10},\n","  {'n_neighbors': 10, 'p': 20},\n","  {'n_neighbors': 67, 'p': 3},\n","  {'n_neighbors': 67, 'p': 10},\n","  {'n_neighbors': 67, 'p': 20},\n","  {'n_neighbors': 90, 'p': 3},\n","  {'n_neighbors': 90, 'p': 10},\n","  {'n_neighbors': 90, 'p': 20}],\n"," 'split0_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.63636364,\n","        0.63636364, 0.63636364]),\n"," 'split1_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.63636364,\n","        0.63636364, 0.63636364]),\n"," 'split2_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.68181818,\n","        0.68181818, 0.68181818]),\n"," 'split3_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.66666667,\n","        0.66666667, 0.66666667]),\n"," 'split4_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.66666667,\n","        0.66666667, 0.66666667]),\n"," 'split5_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.66666667,\n","        0.66666667, 0.66666667]),\n"," 'split6_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.66666667,\n","        0.66666667, 0.66666667]),\n"," 'mean_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,\n","        1.        , 1.        , 1.        , 1.        , 0.66017316,\n","        0.66017316, 0.66017316]),\n"," 'std_test_score': array([0.        , 0.        , 0.        , 0.        , 0.        ,\n","        0.        , 0.        , 0.        , 0.        , 0.01590578,\n","        0.01590578, 0.01590578]),\n"," 'rank_test_score': array([ 1,  1,  1,  1,  1,  1,  1,  1,  1, 10, 10, 10], dtype=int32)}"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["#best parameters\n","best_p=classifier.best_params_\n","print(best_p)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o26YmTUdvp24","executionInfo":{"status":"ok","timestamp":1705048305248,"user_tz":-330,"elapsed":753,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"64ca87e4-1845-45e8-fac0-48c06d217ac2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'n_neighbors': 5, 'p': 3}\n"]}]},{"cell_type":"code","source":["#highest accuracy\n","highest_a=classifier.best_score_\n","print(highest_a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lp7ghV_Rv0j0","executionInfo":{"status":"ok","timestamp":1705048308107,"user_tz":-330,"elapsed":544,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"7e7e1f8c-1663-4f30-8e4c-fa6c3e36f8b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.0\n"]}]},{"cell_type":"code","source":["#loading the results to pandas dataframe\n","result=pd.DataFrame(classifier.cv_results_)\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":654},"id":"7oJ4oy9bv8FY","executionInfo":{"status":"ok","timestamp":1705048311645,"user_tz":-330,"elapsed":1001,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"89cfd255-39be-4d38-8ad4-930f4d65f021"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n","0        0.001014      0.000169         0.004173        0.000571   \n","1        0.000714      0.000148         0.003110        0.000732   \n","2        0.000740      0.000177         0.003326        0.000849   \n","3        0.000639      0.000035         0.002818        0.000141   \n","4        0.000635      0.000016         0.002951        0.000284   \n","5        0.000692      0.000055         0.002980        0.000196   \n","6        0.000787      0.000381         0.009972        0.013816   \n","7        0.000605      0.000039         0.003989        0.000162   \n","8        0.000575      0.000025         0.003708        0.000093   \n","9        0.000562      0.000022         0.003756        0.000106   \n","10       0.000558      0.000025         0.003684        0.000063   \n","11       0.000568      0.000014         0.004232        0.000896   \n","\n","   param_n_neighbors param_p                        params  split0_test_score  \\\n","0                  5       3    {'n_neighbors': 5, 'p': 3}           1.000000   \n","1                  5      10   {'n_neighbors': 5, 'p': 10}           1.000000   \n","2                  5      20   {'n_neighbors': 5, 'p': 20}           1.000000   \n","3                 10       3   {'n_neighbors': 10, 'p': 3}           1.000000   \n","4                 10      10  {'n_neighbors': 10, 'p': 10}           1.000000   \n","5                 10      20  {'n_neighbors': 10, 'p': 20}           1.000000   \n","6                 67       3   {'n_neighbors': 67, 'p': 3}           1.000000   \n","7                 67      10  {'n_neighbors': 67, 'p': 10}           1.000000   \n","8                 67      20  {'n_neighbors': 67, 'p': 20}           1.000000   \n","9                 90       3   {'n_neighbors': 90, 'p': 3}           0.636364   \n","10                90      10  {'n_neighbors': 90, 'p': 10}           0.636364   \n","11                90      20  {'n_neighbors': 90, 'p': 20}           0.636364   \n","\n","    split1_test_score  split2_test_score  split3_test_score  \\\n","0            1.000000           1.000000           1.000000   \n","1            1.000000           1.000000           1.000000   \n","2            1.000000           1.000000           1.000000   \n","3            1.000000           1.000000           1.000000   \n","4            1.000000           1.000000           1.000000   \n","5            1.000000           1.000000           1.000000   \n","6            1.000000           1.000000           1.000000   \n","7            1.000000           1.000000           1.000000   \n","8            1.000000           1.000000           1.000000   \n","9            0.636364           0.681818           0.666667   \n","10           0.636364           0.681818           0.666667   \n","11           0.636364           0.681818           0.666667   \n","\n","    split4_test_score  split5_test_score  split6_test_score  mean_test_score  \\\n","0            1.000000           1.000000           1.000000         1.000000   \n","1            1.000000           1.000000           1.000000         1.000000   \n","2            1.000000           1.000000           1.000000         1.000000   \n","3            1.000000           1.000000           1.000000         1.000000   \n","4            1.000000           1.000000           1.000000         1.000000   \n","5            1.000000           1.000000           1.000000         1.000000   \n","6            1.000000           1.000000           1.000000         1.000000   \n","7            1.000000           1.000000           1.000000         1.000000   \n","8            1.000000           1.000000           1.000000         1.000000   \n","9            0.666667           0.666667           0.666667         0.660173   \n","10           0.666667           0.666667           0.666667         0.660173   \n","11           0.666667           0.666667           0.666667         0.660173   \n","\n","    std_test_score  rank_test_score  \n","0         0.000000                1  \n","1         0.000000                1  \n","2         0.000000                1  \n","3         0.000000                1  \n","4         0.000000                1  \n","5         0.000000                1  \n","6         0.000000                1  \n","7         0.000000                1  \n","8         0.000000                1  \n","9         0.015906               10  \n","10        0.015906               10  \n","11        0.015906               10  "],"text/html":["\n","  <div id=\"df-301be284-58b9-4db9-987d-a8d33641131d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean_fit_time</th>\n","      <th>std_fit_time</th>\n","      <th>mean_score_time</th>\n","      <th>std_score_time</th>\n","      <th>param_n_neighbors</th>\n","      <th>param_p</th>\n","      <th>params</th>\n","      <th>split0_test_score</th>\n","      <th>split1_test_score</th>\n","      <th>split2_test_score</th>\n","      <th>split3_test_score</th>\n","      <th>split4_test_score</th>\n","      <th>split5_test_score</th>\n","      <th>split6_test_score</th>\n","      <th>mean_test_score</th>\n","      <th>std_test_score</th>\n","      <th>rank_test_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.001014</td>\n","      <td>0.000169</td>\n","      <td>0.004173</td>\n","      <td>0.000571</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>{'n_neighbors': 5, 'p': 3}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000714</td>\n","      <td>0.000148</td>\n","      <td>0.003110</td>\n","      <td>0.000732</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>{'n_neighbors': 5, 'p': 10}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000740</td>\n","      <td>0.000177</td>\n","      <td>0.003326</td>\n","      <td>0.000849</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>{'n_neighbors': 5, 'p': 20}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000639</td>\n","      <td>0.000035</td>\n","      <td>0.002818</td>\n","      <td>0.000141</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>{'n_neighbors': 10, 'p': 3}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.000635</td>\n","      <td>0.000016</td>\n","      <td>0.002951</td>\n","      <td>0.000284</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>{'n_neighbors': 10, 'p': 10}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.000692</td>\n","      <td>0.000055</td>\n","      <td>0.002980</td>\n","      <td>0.000196</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>{'n_neighbors': 10, 'p': 20}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.000787</td>\n","      <td>0.000381</td>\n","      <td>0.009972</td>\n","      <td>0.013816</td>\n","      <td>67</td>\n","      <td>3</td>\n","      <td>{'n_neighbors': 67, 'p': 3}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.000605</td>\n","      <td>0.000039</td>\n","      <td>0.003989</td>\n","      <td>0.000162</td>\n","      <td>67</td>\n","      <td>10</td>\n","      <td>{'n_neighbors': 67, 'p': 10}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.000575</td>\n","      <td>0.000025</td>\n","      <td>0.003708</td>\n","      <td>0.000093</td>\n","      <td>67</td>\n","      <td>20</td>\n","      <td>{'n_neighbors': 67, 'p': 20}</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.000562</td>\n","      <td>0.000022</td>\n","      <td>0.003756</td>\n","      <td>0.000106</td>\n","      <td>90</td>\n","      <td>3</td>\n","      <td>{'n_neighbors': 90, 'p': 3}</td>\n","      <td>0.636364</td>\n","      <td>0.636364</td>\n","      <td>0.681818</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.660173</td>\n","      <td>0.015906</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.000558</td>\n","      <td>0.000025</td>\n","      <td>0.003684</td>\n","      <td>0.000063</td>\n","      <td>90</td>\n","      <td>10</td>\n","      <td>{'n_neighbors': 90, 'p': 10}</td>\n","      <td>0.636364</td>\n","      <td>0.636364</td>\n","      <td>0.681818</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.660173</td>\n","      <td>0.015906</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.000568</td>\n","      <td>0.000014</td>\n","      <td>0.004232</td>\n","      <td>0.000896</td>\n","      <td>90</td>\n","      <td>20</td>\n","      <td>{'n_neighbors': 90, 'p': 20}</td>\n","      <td>0.636364</td>\n","      <td>0.636364</td>\n","      <td>0.681818</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.660173</td>\n","      <td>0.015906</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-301be284-58b9-4db9-987d-a8d33641131d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-301be284-58b9-4db9-987d-a8d33641131d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-301be284-58b9-4db9-987d-a8d33641131d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c661f968-9258-4eba-8ec7-402da32d2dfa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c661f968-9258-4eba-8ec7-402da32d2dfa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c661f968-9258-4eba-8ec7-402da32d2dfa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ab001da1-04ca-4e8b-ad27-39977953d74c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ab001da1-04ca-4e8b-ad27-39977953d74c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["grid=result[['param_n_neighbors', 'param_p','mean_test_score']]\n","grid"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"6N7qdnULwhjx","executionInfo":{"status":"ok","timestamp":1705048350097,"user_tz":-330,"elapsed":763,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"5326af05-95ea-4530-fb18-b9527a3a8990"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   param_n_neighbors param_p  mean_test_score\n","0                  5       3         1.000000\n","1                  5      10         1.000000\n","2                  5      20         1.000000\n","3                 10       3         1.000000\n","4                 10      10         1.000000\n","5                 10      20         1.000000\n","6                 67       3         1.000000\n","7                 67      10         1.000000\n","8                 67      20         1.000000\n","9                 90       3         0.660173\n","10                90      10         0.660173\n","11                90      20         0.660173"],"text/html":["\n","  <div id=\"df-718d2309-9a6e-4412-a12b-6202f2c28956\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>param_n_neighbors</th>\n","      <th>param_p</th>\n","      <th>mean_test_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>67</td>\n","      <td>3</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>67</td>\n","      <td>10</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>67</td>\n","      <td>20</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>90</td>\n","      <td>3</td>\n","      <td>0.660173</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>90</td>\n","      <td>10</td>\n","      <td>0.660173</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>90</td>\n","      <td>20</td>\n","      <td>0.660173</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-718d2309-9a6e-4412-a12b-6202f2c28956')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-718d2309-9a6e-4412-a12b-6202f2c28956 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-718d2309-9a6e-4412-a12b-6202f2c28956');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ed98535c-ebde-4777-97d8-8e95606e14d1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed98535c-ebde-4777-97d8-8e95606e14d1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ed98535c-ebde-4777-97d8-8e95606e14d1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_76ec29d1-8015-47d5-9984-0e318cf84cc9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('grid')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_76ec29d1-8015-47d5-9984-0e318cf84cc9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('grid');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":[" #Model Selection\n"," from sklearn.linear_model import LogisticRegression\n"," from sklearn.svm import SVC\n"," from sklearn.ensemble import RandomForestClassifier\n"," from sklearn.neighbors import KNeighborsClassifier\n","\n"],"metadata":{"id":"ZCcEQKAFzX8C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#list of models\n","models_list=[ LogisticRegression(),SVC(),RandomForestClassifier(), KNeighborsClassifier()]"],"metadata":{"id":"h-4APZFW06QN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#creating a dictionary that contains hyperparameters values for the above  mentioned models\n","model_hyperparameters={\n","    'log_reg_hyperparameters':{\n","        'C':[1,5,10,20]\n","    },\n","    'svc_hyperparameters':{\n","        'kernel':['linear','poly','rbf','sigmoid'],\n","        'C':[20,54,3,2]\n","    },\n","    'knn_hyperparameters':{\n","        'n_neighbors':[10,34,20]\n","    },\n","    'random_forest_hyperparameters':{\n","        'n_estimators':[10,20,40,100]\n","    }\n","\n","\n","\n","}"],"metadata":{"id":"dqzX0hTz2GdN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(model_hyperparameters.keys())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AsmY6ris4akZ","executionInfo":{"status":"ok","timestamp":1705051287041,"user_tz":-330,"elapsed":849,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"5164954a-d2d3-492d-96b3-d001d43ecba9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['log_reg_hyperparameters', 'svc_hyperparameters', 'knn_hyperparameters', 'random_forest_hyperparameters'])\n"]}]},{"cell_type":"code","source":["model_keys=list(model_hyperparameters.keys())\n","model_keys"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VMulbO8n2p7c","executionInfo":{"status":"ok","timestamp":1705051291745,"user_tz":-330,"elapsed":545,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"b62fde08-ad96-41aa-e249-589df23e59ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['log_reg_hyperparameters',\n"," 'svc_hyperparameters',\n"," 'knn_hyperparameters',\n"," 'random_forest_hyperparameters']"]},"metadata":{},"execution_count":182}]},{"cell_type":"code","source":["model_hyperparameters[model_keys[2]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2yY6xf9B4teb","executionInfo":{"status":"ok","timestamp":1705051298815,"user_tz":-330,"elapsed":717,"user":{"displayName":"Krishna Verma","userId":"15856638246296740175"}},"outputId":"1efc4e39-cee8-457e-a53d-7b0d049cefb7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_neighbors': [10, 34, 20]}"]},"metadata":{},"execution_count":183}]},{"cell_type":"code","source":["#Applying Grid SearchCv\n","def model_selection(list_of_models,hyperparameters_dict):\n","  result=[]\n","  i=0\n","  for models in list_of_models:\n","    key=model_keys[i]\n","    params=hyperparameters_dict[key]\n","    i+=1\n","\n","    print(models)\n","    print(params)\n","    classifier=GridSearchCV(models,params,cv=10)\n","\n","    #fitting the data to classifier\n","    classifier.fit(x,y)\n","    result.append({\n","        'model used':models,\n","        'highest score':classifier.best_score_,\n","        'best hyperparameters':classifier.best_params_\n","    })\n","  result_dataframe=pd.DataFrame(result,columns=['model used','highest score', 'best hyperparameters'])\n","  return result_dataframe\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"hmmwvVCT5fL_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_selection(models_list, model_hyperparameters)"],"metadata":{"id":"G8EGOOCs8cJ7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"_W6Us_hlAReF"}}]}